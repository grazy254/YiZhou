package models.sys;
import annotation.TableBind;
import base.models.BaseRecordLog;
import models.driver.DriverInfo;
import models.member.MemberLogin;
import models.order.TraverRecord;
import plugin.sqlInXml.SqlManager;

import java.util.List;

/**
 * Generated by JFinal.
 */
@TableBind(tableName = "dele_record_log")
public class RecordLog extends BaseRecordLog<RecordLog> {
	public static final RecordLog dao = new RecordLog();

	/**
	 * 获取司机选择行程的乘客
	 * @param id
	 * @param loginId
	 * @return
	 */
	public RecordLog findByRecordId(int id,int loginId) {
		return findFirst("select * from dele_record_log where record_id = ? and login_id = ? and type !=1", id, loginId);
	}

	public List<RecordLog> findByRecordsId(int pd,int recordId, int loginId) {
		if (pd==0) {
			return find("select * from dele_record_log where record_id = ? and login_id != ? and amount is not null and status = 2",recordId,loginId);
		}else if (pd == 1) {
			return find("select * from dele_record_log where record_id = ? and login_id != ? and pinCheAmount is not null and status=2",recordId,loginId);
		}else if (pd==2) {
			return find("select * from dele_record_log where record_id = ? and login_id != ? and jiHuoAmount is not null and status = 2",recordId,loginId);
		}else if (pd==3){
			return find("select * from dele_record_log where record_id = ? and login_id = ?",recordId,loginId);
		}else {
			return null;
		}
	}

	public boolean findByBaoChe(int record_id) {
		if (findFirst("select * from dele_record_log where record_id = ? and pinCheAmount is null and amount is not null",record_id)!=null){
			return true;
		}else {
			return false;
		}
	}

	public RecordLog findByRecordIdAndLoginId(int rId,int lId){
		return findFirst("select * from dele_record_log where record_id = ? and login_id = ? and status=1",rId,lId);
	}
	public RecordLog findByRecordIdAndLoginId1(int rId,int lId){
		return findFirst("select * from dele_record_log where record_id = ? and login_id != ?",rId,lId);
	}

	/**
	 * 查询乘客发布的司机未接单行程
	 * @return
	 */
	public RecordLog findRecord(int rId,int lId){
		return findFirst("select * from dele_record_log where record_id = ? and login_id = ? and type=2",rId,lId);
	}
	/**
	 * 获取行程所有的客户
	 */
	public List<RecordLog> findByRecord(int rId,int lId) {
		return find("Select * from dele_record_log where record_id = ? and login_id != ?",rId,lId);
	}
	/**
	 * 判断司机是否已经选择过乘客选择的司机行程
	 */
	public int findByCount(int rId,int lId) {
		return findFirst(SqlManager.sql("traver.findCount"),rId,lId).getNumber("c").intValue();
	}

	/**
	 * 判断司机该行程是否接了拼车订单
	 */
	public boolean findPinChe(int rId,int lId) {
		if (findFirst("select * from dele_record_log where record_id = ? and login_id != ? and status = 2 and pinCheAmount is not null",rId,lId)!=null){
			return true;
		}else {
			return false;
		}
	}

	/**
	 * 判断司机该司机是否接了包车订单
	 */
	public boolean findBaoChe(int rld,int lId) {
		if (findFirst("select * from dele_record_log where record_id = ? and login_id != ? and status = 2 and amount is not null",rld,lId)!=null){
			return true;
		}else {
			return false;
		}
	}

	public RecordLog findOrder(TraverRecord traverRecord,MemberLogin memberLogin){
		return findFirst(SqlManager.sql("traver.findOrder"),traverRecord.getId(),memberLogin.getId());
	}
}
